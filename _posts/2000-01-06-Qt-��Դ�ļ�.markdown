---
layout: post
title: "Qt-资源文件和Pro文件" 
comments: true
share: true
tags: Qt
---


Qt 资源系统是一个跨平台的资源机制，用于将程序运行时所需要的资源以二进制的形式存储于可执行文件内部。

在工程上点右键，选择“添加新文件…”，可以在 Qt 分类下找到“Qt 资源文件”：

![](http://files.devbean.net/images/2012/08/qtc-qrc-create-600x409.png)


点击“选择…”按钮，打开“新建 Qt 资源文件”对话框。在这里我们输入资源文件的名字和路径，点击下一步，选择所需要的版本控制系统，然后直接选择完成。

我们首先需要添加前缀，比如我们将前缀取名为 images。然后选中这个前缀，继续点击添加文件，可以找到我们所需添加的文件。这里，我们选择 document-open.png 文件。当我们完成操作之后，Qt Creator 应该是这样子的：

![](http://files.devbean.net/images/2012/08/qtc-qrc-added-600x403.png)

这么做带来的一个问题是，如果以后我们要更改文件名，比如将 docuemnt-open.png 改成 docopen.png，那么，所有使用了这个名字的路径都需要修改。所以，更好的办法是，我们给这个文件去一个“别名”，以后就以这个别名来引用这个文件。具体做法是，选中这个文件，添加别名信息：

![](http://files.devbean.net/images/2012/08/qtc-qrc-alias-600x403.png)

这样，我们可以直接使用:/images/doc-open引用到这个资源，无需关心图片的真实文件名。

资源编辑窗口最下方有一个“语言”。这个可以对资源进行国际化。比如我们新建一个前缀，将语言设置为 fr，再添加一个文件 document-open-fr.png：

![](http://files.devbean.net/images/2012/08/qtc-qrc-lang-600x403.png)

我们可以使用:/images/fr/doc-open引用到 document-open-fr.png 这个文件。这个“语言”的作用是，如果 Qt 发现，本机的本地化信息是 fr 的话（QLocale::system().name()返回 fr_FR），则使用:/images/fr/doc-open这个图片；如果不是，则默认使用:/images/doc-open这个。

当我们编译工程之后，我们可以在构建目录中找到 qrc_res.cpp 文件，这就是 Qt 将我们的资源编译成了 C++ 代码。


## pro文件： ##

MainWindow.pro  ：
	
	QT       += core gui
	
	greaterThan(QT_MAJOR_VERSION, 4): QT += widgets
	
	TARGET = MainWindow
	TEMPLATE = app
	
	
	SOURCES += main.cpp\
	        mainwindow.cpp
	
	HEADERS  += mainwindow.h
	
	FORMS    += mainwindow.ui
	

首先，我们定义了 QT，用于告诉编译器，需要使用哪些模块。

我们通常需要添加 core 和 gui。

第二行，如果 Qt 的主版本号（QT_MAJOR_VERSION）大于 4，也就是 Qt 5，则需要另外添加 widgets（因为在 Qt 5 中，所有组件都是在 widgets 模块定义的）。

TARGET 是生成的程序的名字。

TEMPLATE 是生成 makefile 所使用的模板，比如 app 就是编译成一个可执行程序，而 lib 则是编译成一个链接库（默认是动态链接库）。

SOURCES 和 HEADERS 顾名思义，就是项目所需要的源代码文件和头文件。

以后随着项目的不断增大，pro 文件通常会非常复杂。

